{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"AWS/AWS.md/","title":"AWS","text":"<p>TEST Acc\u00e9der \u00e0 la documentation AWS</p>"},{"location":"Docker/Docker.md/","title":"Docker","text":""},{"location":"Docker/Docker.md/#compatibilite-kernel","title":"Compatibilit\u00e9 Kernel","text":"<ul> <li>Les conteneurs Docker partagent le kernel du syst\u00e8me h\u00f4te (g\u00e8re les ressources mat\u00e9rielles).  </li> <li>Par cons\u00e9quent, Docker Linux ne peut tourner que sur un syst\u00e8me h\u00f4te avec un kernel Linux compatible.  </li> </ul>"},{"location":"Docker/Docker.md/#installation","title":"Installation","text":""},{"location":"Docker/Docker.md/#convenience-script","title":"Convenience script","text":"<p>Il est pr\u00e9f\u00e9rable d'utiliser le convenience script pour une utilisation de docker hors production.  </p>"},{"location":"Docker/Docker.md/#windows","title":"Windows","text":"<p>T\u00e9l\u00e9charger</p>"},{"location":"Docker/Docker.md/#documentation","title":"Documentation","text":"<p>https://docs.docker.com/engine/install/  </p>"},{"location":"Docker/Docker.md/#docker-exit","title":"Docker Exit","text":"<p>Si le service qui tourne dans le container s'arr\u00eate le container est arr\u00eat\u00e9 (exit)</p>"},{"location":"Docker/Docker.md/#commandes-de-bases","title":"Commandes de bases","text":"<ul> <li><code>docker run [image]</code> : Lance un conteneur \u00e0 partir d'une image.  </li> <li>-<code>docker run [image] [cmd]</code> : Lance un conteneur \u00e0 partir d'une image et taper la cmd.  </li> <li><code>docker run -d [image]</code> : Lance un conteneur \u00e0 partir d'une image et mode d\u00e9tach\u00e9  </li> <li><code>docker run -it [image]</code> : Interactive terminal, permet d'afficher les promet et taper un argument si l'application le demande. </li> <li><code>docker run -p HostPort:ContainerPort [image]</code> : port mapping</li> <li><code>docker run -v HostVolume:ContainerVolume [image]</code> : port mapping</li> <li><code>docker inspect [container]</code> : D\u00e9tail d'un container</li> <li><code>docker attach [container]</code> : Se connecte au terminal d'un conteneur en cours d'ex\u00e9cution.</li> <li><code>docker ps</code> : Affiche les conteneurs en cours d'ex\u00e9cution.  </li> <li><code>docker ps -a</code> : Affiche tous les conteneurs, y compris ceux qui sont arr\u00eat\u00e9s.  </li> <li><code>docker stop [container]</code> : Arr\u00eate un conteneur en cours d'ex\u00e9cution.  </li> <li><code>docker start [container]</code> : D\u00e9marre un conteneur arr\u00eat\u00e9.  </li> <li><code>docker restart [container]</code> : Red\u00e9marre un conteneur.  </li> <li><code>docker rm [container]</code> : Supprime un conteneur arr\u00eat\u00e9.  </li> <li><code>docker rmi [image]</code> : Supprime une image Docker.  </li> <li><code>docker build -t [image_name] [path]</code> : Cr\u00e9e une image Docker \u00e0 partir d'un Dockerfile.  </li> <li><code>docker images</code> : Liste les images disponibles localement.  </li> <li><code>docker pull [image]</code> : T\u00e9l\u00e9charge une image depuis Docker Hub.  </li> <li><code>docker push [image]</code> : Envoie une image vers un registre Docker.  </li> <li><code>docker exec -it [container] [command]</code> : Ex\u00e9cute une commande dans un conteneur en cours d'ex\u00e9cution.  </li> <li><code>docker logs [container]</code> : Affiche les logs d'un conteneur.  </li> <li><code>docker volume ls</code> : Liste les volumes Docker.  </li> <li><code>docker network ls</code> : Liste les r\u00e9seaux Docker.  </li> <li><code>docker prune</code> : Supprime les ressources inutilis\u00e9es (conteneurs, images, volumes, r\u00e9seaux)  </li> </ul>"},{"location":"Docker/Docker.md/#docker-hub","title":"Docker Hub","text":"<p>Listes des images </p>"},{"location":"Docker/Docker.md/#acces-application-conteneurisee","title":"Acc\u00e8s application conteneuris\u00e9e","text":"<p>1/ Depuis le host Utiliser l'adresse IP du container <code>docker inspect [container]</code> </p> <p>2/ Depuis l'ext\u00e9rieur Faire du port mapping <code>docker run -p</code> </p>"},{"location":"Docker/Docker.md/#creer-image","title":"Cr\u00e9er image","text":"<p>1/ Cr\u00e9er un dockerfile </p> Dockerfile example <pre><code># Utiliser une image Python comme base  \nFROM python:3.9-slim  \n\n# D\u00e9finir le r\u00e9pertoire de travail  \nWORKDIR /app  \n\n# Copier les fichiers de l'application dans le conteneur  \nCOPY requirements.txt ./  \nCOPY app.py ./  \n\n# Installer les d\u00e9pendances  \nRUN pip install --no-cache-dir -r requirements.txt  \n\n# Exposer le port utilis\u00e9 par Flask  \nEXPOSE 5000  \n\n# D\u00e9finir la commande pour lancer l'application Flask  \nCMD [\"python\", \"app.py\"]  \n</code></pre> <p>2/ builder l'image </p> <pre><code>docker build -t flask-app .  \n</code></pre> <p>Le deuxi\u00e8me build est plus rapide car les \u00e9tapes de build (exemple : t\u00e9l\u00e9charge image ubuntu) ne sont pas rejouer  </p> <p>3/ Upload image A - Cr\u00e9er l'image avec le tag du repo (exemple omar) et pousser  </p> <pre><code>docker build -t omar/flask-app .  \n</code></pre> <p>B - Se connecter au repo</p> <pre><code>docker login\n</code></pre> <p>C - Pousser l'image</p> <pre><code>docker push omar/flask-app .\n</code></pre>"},{"location":"Docker/Docker.md/#references","title":"R\u00e9f\u00e9rences","text":"<p>Coursera - Docker Basics for DevOps </p>"},{"location":"Git/Git.md/","title":"GIT","text":""},{"location":"Git/Git.md/#git-stash","title":"Git stash","text":"<p>Description Permet de sauvegarder temporairement vos modifications en cours (non index\u00e9es ou index\u00e9es) sans les committer.</p> <p>Commandes</p> <pre><code>git stash\n</code></pre> <p>Sauvegarde les modifications actuelles dans une pile sans les committer.</p> <pre><code>git stash pop\n</code></pre> <p>Applique et supprime la derni\u00e8re sauvegarde de la pile.</p> <pre><code>git stash drop\n</code></pre> <p>Supprime la derni\u00e8re sauvegarde de la pile sans l'appliquer.</p> <pre><code>git stash apply\n</code></pre> <p>Applique une sauvegarde sans la supprimer de la pile.</p> <pre><code>git stash clear\n</code></pre> <p>Supprime toutes les sauvegardes de la pile.</p>"},{"location":"Git/Git.md/#git-log","title":"Git log","text":"<p>Description <code>git log</code> permet de visualiser l'historique des commits dans un d\u00e9p\u00f4t.</p> <p>Commandes</p> <pre><code>git log --oneline\n</code></pre> <p>Affiche un r\u00e9sum\u00e9 des commits sous forme de liste concise avec un identifiant abr\u00e9g\u00e9 et un message.</p> <pre><code>git log -p\n</code></pre> <p>Affiche l'historique des commits avec les diff\u00e9rences (<code>diffs</code>) des fichiers modifi\u00e9s.</p> <pre><code>git log --stat\n</code></pre> <p>Affiche l'historique des commits avec des statistiques sur les fichiers modifi\u00e9s (ajouts, suppressions).</p> <pre><code>git shortlog\n</code></pre> <p>Affiche l'historique des commits par auteur, avec un r\u00e9sum\u00e9 des contributions.</p> <pre><code>git log --graph\n</code></pre> <p>Affiche l'historique des commits sous forme de graphique pour visualiser les branches.</p> <pre><code>git log --oneline --graph\n</code></pre> <p>Affiche l'historique des commits sous forme de graphique simplifi\u00e9 avec une ligne par commit.</p> <pre><code>git log --graph --pretty=\"%C(yellow) Hash: %h %C(blue)Date: %ad %C(red) Message: %s \" --date=human\n</code></pre> <p>Affiche un graphique des commits avec des informations format\u00e9es sur le hash, la date et le message.</p> <pre><code>git log --graph --pretty=format:\"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset\" --abbrev-commit\n</code></pre> <p>Affiche un graphique avec un format personnalis\u00e9, y compris le nom de l'auteur et l'heure du commit.</p> <pre><code>git config --global alias.lg 'log --color --graph --pretty=\"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset\" --abbrev-commit'\n</code></pre> <p>Cr\u00e9e un alias <code>lg</code> pour afficher les commits dans un format graphique personnalis\u00e9.</p> <pre><code>git log -- testfile-02 branchfile-01\n</code></pre> <p>Affiche l'historique des commits pour des fichiers sp\u00e9cifiques dans une branche donn\u00e9e.</p> <pre><code>git log master..second-branch\n</code></pre> <p>Affiche l'historique des commits pour comparer deux branches (ici <code>master</code> et <code>second-branch</code>).</p> <pre><code>git log --merges (ou --no-merges)\n</code></pre> <p>Affiche uniquement les commits de type merge ou les exclut selon l'option choisie.</p> <pre><code>git log --before 2021-4-30 --after=2021-4-1\n</code></pre> <p>Affiche les commits dans une plage de dates sp\u00e9cifique.</p> <pre><code>git log -3\n</code></pre> <p>Affiche les 3 derniers commits.</p> <pre><code>git log -1 --grep=\"JIRA\"\n</code></pre> <p>Recherche les commits contenant un mot-cl\u00e9 dans leur message, ici \"JIRA\".</p>"},{"location":"Git/Git.md/#git-branch","title":"Git branch","text":"<p>Afficher les branches distantes</p> <pre><code>git branch -r\n</code></pre>"},{"location":"Git/Git.md/#erreur-ssl-a-cause-du-ca-root","title":"Erreur SSL \u00e0 cause du CA ROOT","text":""},{"location":"Git/Git.md/#etapes-pour-linux","title":"Etapes pour Linux","text":"<p>Description Si une erreur SSL se produit, il peut \u00eatre n\u00e9cessaire de mettre \u00e0 jour le certificat racine (CA Root) pour r\u00e9soudre le probl\u00e8me.</p> <p>T\u00e9l\u00e9charger le CA ROOT.</p> <p>Copier le fichier ici : <code>/usr/local/share/ca-certificates/ca.crt</code></p> <p>Lancer la commande :</p> <pre><code>sudo update-ca-certificates\n</code></pre>"},{"location":"Git/Git.md/#etapes-pour-windows","title":"\u00c9tapes pour Windows","text":"<ol> <li>Ouvrir le gestionnaire des certificats</li> <li>Appuyez sur Win + R et tapez :    <code>certmgr.msc</code></li> <li>Importer le certificat root</li> <li>Naviguez vers Autorit\u00e9s de certification racines de confiance &gt; Certificats.</li> <li>Faites un clic droit et s\u00e9lectionnez Toutes les t\u00e2ches &gt; Importer.</li> <li>Suivez l\u2019assistant et s\u00e9lectionnez votre certificat root (par exemple, root-ca.crt).</li> <li>Red\u00e9marrer les applications concern\u00e9es</li> </ol> <p>Une fois le certificat ajout\u00e9, red\u00e9marrez les applications ou services (GitLab Runner, Ansible, etc.).</p>"},{"location":"Git/Git.md/#git-config","title":"Git config","text":""},{"location":"Git/Git.md/#option-git-config","title":"Option git config","text":"<ul> <li><code>--system</code> - Table applicable \u00e0 l'ensemble de la machine.</li> <li><code>--global</code> - Configuration pour l'utilisateur actuel.</li> <li><code>--local</code> (par d\u00e9faut) - Configuration pour le d\u00e9p\u00f4t courant.</li> </ul>"},{"location":"Git/Git.md/#configuration-de-base","title":"Configuration de base","text":"<pre><code>git config --global user.email johndoe@myemail.com\n</code></pre> <pre><code>git config --global user.name \"John Doe\"\n</code></pre> <pre><code>git config --global color.status auto\n</code></pre> <pre><code>git config --global color.branch auto\n</code></pre> <pre><code>git config --global color.interactive auto\n</code></pre> <pre><code>git config --global color.diff auto\n</code></pre> <pre><code>git config --global alias.adog \"log --all --decorate --oneline --graph\"\n</code></pre> <pre><code>git config --global core.editor vim\n</code></pre> <p>Le fichier de configuration est <code>~/.gitconfig</code>.</p>"},{"location":"Git/Git.md/#afficher-les-configs","title":"Afficher les configs","text":"<pre><code>git config --list\n</code></pre> <pre><code>git config --list --global\n</code></pre> <pre><code>git config user.name\n</code></pre>"},{"location":"Git/Git.md/#contenu-du-dossier-git","title":"Contenu du dossier .git","text":"<ul> <li>hooks : Contient tous les hooks personnalis\u00e9s. Ce sont des scripts ex\u00e9cut\u00e9s avant ou apr\u00e8s certaines actions (commit, push, etc.).</li> <li>branches : Ce dossier est obsol\u00e8te.</li> <li>HEAD : Pointeur vers la branche actuelle et son dernier commit.</li> <li>config : Fichier de configuration du d\u00e9p\u00f4t.</li> <li>info : Contient les fichiers en attente d'ajout avec <code>git add</code>.</li> <li>refs : Contient l'\u00e9tat actuel des branches et des tags.</li> <li>objects : Contient les objets Git tels que les commits, arbres et blobs.</li> <li>logs : Contient les logs des actions effectu\u00e9es sur le d\u00e9p\u00f4t.</li> <li>description : Description du d\u00e9p\u00f4t.</li> </ul>"},{"location":"Git/Git.md/#git-checkout","title":"Git checkout","text":"<p>Annuler changement sur un fichier non index\u00e9 (not yet added)</p> <pre><code>git checkout testfile-01\n</code></pre>"},{"location":"Git/Git.md/#git-rm","title":"Git rm","text":"<p>Annuler modification index\u00e9e (added)</p> <p>Supprime un fichier de la staging area sans le supprimer du disque.</p> <pre><code>git rm --cached myfile\n</code></pre> <p>Supprime un fichier \u00e0 la fois de Git et du disque, m\u00eame s'il est modifi\u00e9.</p> <pre><code>git rm -f myfile\n</code></pre>"},{"location":"Git/Git.md/#git-reset-et-revert","title":"Git reset et revert","text":""},{"location":"Git/Git.md/#reset","title":"Reset","text":""},{"location":"Git/Git.md/#soft","title":"Soft","text":"<p>Revenir 1 commit en arri\u00e8re sans supprimer les modifications au niveau du fichier.</p> <pre><code>git reset --soft HEAD~1\n</code></pre>"},{"location":"Git/Git.md/#hard","title":"Hard","text":"<p>Revenir 1 commit en arri\u00e8re et supprimer les modifications au niveau du fichier.</p> <pre><code>git reset --hard HEAD~1\n</code></pre>"},{"location":"Git/Git.md/#revert","title":"Revert","text":"<p>Cr\u00e9e un nouveau commit qui annule un ancien commit. Cela permet de rester lin\u00e9aire et de ne pas avoir un HEAD en retard par rapport au HEAD distant.</p> <p>Important : revert annule les modifications apport\u00e9es par le commit cibl\u00e9 par le revert.</p> <pre><code>git revert --no-edit HEAD~1\n</code></pre>"},{"location":"Git/Git.md/#git-diff","title":"Git diff","text":"<pre><code>git diff\n</code></pre> <pre><code>git diff HEAD~1\n</code></pre> <pre><code>git diff HEAD~1 testfile-01\n</code></pre> <pre><code>git diff --staged\n</code></pre>"},{"location":"Git/Git.md/#git-show","title":"Git show","text":"<p>Affiche le r\u00e9sultat de <code>git log</code> + <code>git diff</code> d'un commit. Utiliser <code>git log -p</code> pour tous les commits.</p> <pre><code>git show\n</code></pre> <pre><code>git show HEAD~1\n</code></pre>"},{"location":"Git/Git.md/#git-tag","title":"Git tag","text":""},{"location":"Git/Git.md/#supprimer-un-tag","title":"Supprimer un tag","text":"<pre><code>git tag -d v1.0\n</code></pre>"},{"location":"Git/Git.md/#basculer-sur-un-tag","title":"Basculer sur un tag","text":"<pre><code>git checkout v1.0\n</code></pre>"},{"location":"Git/Git.md/#creer-un-tag-sur-le-commit-courant","title":"Cr\u00e9er un tag sur le commit courant","text":"<pre><code>git tag -a v2.0 -m \"version 2.0. A lot of new features\"\n</code></pre>"},{"location":"Git/Git.md/#afficher-contenu-dun-commit-par-son-tag","title":"Afficher contenu d'un commit par son tag","text":"<pre><code>git show v1.0\n</code></pre>"},{"location":"Git/Git.md/#git-fetch","title":"Git fetch","text":"<p>T\u00e9l\u00e9charge les derniers commits distants sans les int\u00e9grer \u00e0 la branche locale. Ces merges sont dans une branche diff\u00e9rente (ex: <code>origin/main</code>, local c'est <code>main</code>).</p>"},{"location":"Git/Git.md/#git-rebase","title":"Git rebase","text":"<p>R\u00e9\u00e9crit les commits d'une branche dans un historique lin\u00e9aire sur la branche master. Cela permet d'avoir un historique lin\u00e9aire et des identifiants de commit diff\u00e9rents.</p> <p>Pratique : faire un rebase et ensuite merger pour changer la pointe du master sur le dernier commit.</p>"},{"location":"Git/Git.md/#git-remote","title":"Git remote","text":""},{"location":"Git/Git.md/#ajouter-un-remote-repo","title":"Ajouter un remote repo","text":"<pre><code>git remote add origin $URI\n</code></pre>"},{"location":"Git/Git.md/#afficher-les-repos-distants","title":"Afficher les repos distants","text":"<pre><code>git remote -v\n</code></pre>"},{"location":"Git/Git.md/#configurer-remote-repo-avec-token","title":"Configurer remote repo avec Token","text":"<pre><code>git remote set-url origin https://YOUR_USERNAME:YOUR_TOKEN@github.com/YOUR_USERNAME/YOUR_REPOSITORY.git\n</code></pre>"},{"location":"Git/Git.md/#git-fork","title":"Git fork","text":"<p>Cr\u00e9er une copie d'un projet, modifier et cr\u00e9er ensuite une PR (pull request) pour demander au projet fork\u00e9 d'accepter et de merger les modifications. Utilis\u00e9 surtout sur les projets sur lesquels on n'a pas les droits de pull.</p>"},{"location":"Git/Git.md/#git-merge","title":"Git merge","text":""},{"location":"Git/Git.md/#fast-forward-merge","title":"Fast-forward merge","text":"<p>Le master n'a aucun nouveau commit compar\u00e9 \u00e0 la branche \u00e0 merger.</p>"},{"location":"Git/Git.md/#no-fast-forward-merge","title":"No fast-forward merge","text":"<p>Le master a de nouveaux commits compar\u00e9 \u00e0 la branche \u00e0 merger. Un commit de merge est cr\u00e9\u00e9.</p>"},{"location":"Jenkins/Jenkins.md/","title":"Jenkins","text":""},{"location":"Jenkins/Jenkins.md/#cicd-definition","title":"CICD D\u00e9finition","text":"<p>CI Continuous Integration  - Tests du code  - Packaging de l'application  </p> <p>CD Continuous Delivery/Deployment - Authentification \u00e0 l'infrastructure qui h\u00e9berge l'application  - D\u00e9ploiement de l'application - Test de l'application  </p> <p>Delivery vs Deployment - Delivery : Le d\u00e9ploiement est lanc\u00e9 manuellement depuis Jenkins - Deployment : Mise en production automatis\u00e9e    </p>"},{"location":"Jenkins/Jenkins.md/#installation","title":"Installation","text":"<p>S\u00e9 r\u00e9f\u00e9rer \u00e0 la documentation Pr\u00e9-requis linux <code>sudo apt install openjdk-17-jdk</code> La version JDK d\u00e9pend de la version de jenkins  </p>"},{"location":"Jenkins/Jenkins.md/#port-decoute","title":"Port d'\u00e9coute","text":"<p>8022 SSH 8085 Interface graphique</p>"},{"location":"Jenkins/Jenkins.md/#authentification-ssh-cle-publique","title":"Authentification SSH cl\u00e9 publique","text":"<p>G\u00e9n\u00e9rer une paire de cl\u00e9s SSH (si ce n'est pas d\u00e9j\u00e0 fait) : <code>ssh-keygen -t rsa -b 4096 -C \"votre_email@example.com\"</code> </p> <p>Ajouter la cl\u00e9 publique \u00e0 Jenkins :  - Connectez-vous \u00e0 Jenkins. - Allez dans G\u00e9rer Jenkins &gt; G\u00e9rer les identifiants. - Choisissez le p\u00e9rim\u00e8tre appropri\u00e9 (par ex. Global). - Cliquez sur Ajouter des identifiants. - S\u00e9lectionnez Type : \"Nom d'utilisateur SSH avec cl\u00e9 priv\u00e9e\". - Saisissez un Nom d'utilisateur et collez votre cl\u00e9 priv\u00e9e (<code>~/.ssh/id_rsa</code>) dans le champ Cl\u00e9   priv\u00e9e.  </p>"},{"location":"Jenkins/Jenkins.md/#cli","title":"CLI","text":""},{"location":"Jenkins/Jenkins.md/#installation_1","title":"Installation","text":"<p>Aller dans la rubrique <code>Jenkins &gt; Manage Jenkins &gt; Jenkins CLI</code> et suivre les \u00e9tapes d'installation. 1. T\u00e9l\u00e9charger le zip jenkins-cli.jar 2. java -jar jenkins-cli.jar -s http://@IP:8080/ help  </p>"},{"location":"Jenkins/Jenkins.md/#commandes","title":"Commandes","text":"<p>TOKEN 1. Cr\u00e9er le token depuis <code>Account &gt; Security &gt; API Token</code>  2. Lancer la commande avec token: <code>java -jar jenkins-cli.jar -s http://$IP:8080/ -auth USER:TOKEN</code> </p> <p>SSH 1. Cr\u00e9er et d\u00e9ployer la cl\u00e9 SSH (voir rubrique <code>Authentification SSH cl\u00e9 publique</code>) 2. Lancer la commande avec SSH <code>ssh -i /chemin/cl\u00e9_priv\u00e9e -l USER -p 8022 jenkins-server help</code> jenkins-server : IP ou FQDN du serveur  </p> <p>Liste des commandes  UI : <code>Jenkins &gt; Manage Jenkins &gt; Jenkins CLI</code> </p>"},{"location":"Jenkins/Jenkins.md/#backup","title":"Backup","text":""},{"location":"Jenkins/Jenkins.md/#script","title":"Script","text":"<p>GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins </p>"},{"location":"Jenkins/Jenkins.md/#plugin","title":"Plugin","text":"<p>T\u00e9l\u00e9charger le plugin ThinBackup <code>Dashboard &gt; Manage Jenkins &gt; Pugins &gt; Available Jenkins</code> Configurer le plugin <code>Dashboard &gt; Manage Jenkins &gt; System</code> </p>"},{"location":"Jenkins/Jenkins.md/#snapshot","title":"Snapshot","text":"<p>A venir\u2026 peut \u00eatre   </p>"},{"location":"Jenkins/Jenkins.md/#pipelines","title":"Pipelines","text":""},{"location":"Jenkins/Jenkins.md/#chemin-sur-le-serveur","title":"Chemin sur le serveur","text":"<p><code>/var/lib/jenkins/workspace/pipeline_name</code> </p>"},{"location":"Jenkins/Jenkins.md/#jenkinsfile-sur-github","title":"Jenkinsfile sur Github","text":"<p>On peut utiliser un WebHook (voir plus bas), ou lancer la pipeline manuellement. Pour lancer manuellement : 1. Cr\u00e9er un nouveau item pipeline 2. Dans pipeline definition s\u00e9lectionner Pipeline script from SCM 3. Choisir le projet Git et la branche  </p>"},{"location":"Jenkins/Jenkins.md/#exemple-de-declarative-script-pipeline","title":"Exemple de declarative script Pipeline","text":"Cliquer pour d\u00e9rouler <pre><code>pipeline {  \n  agent { docker { image 'python:3.8' } }  \n  stages {  \n    stage('build') {  \n      steps {  \n            sh 'python -m venv .venv'  \n            sh '''  \n                . .venv/bin/activate  \n                pip install -r requirements.txt  \n\n            '''  \n\n      }  \n    }  \n    stage('test') {  \n      steps {  \n            sh '''  \n                . .venv/bin/activate  \n                pytest --junit-xml test-reports/results.xml application_test.py  \n\n            '''  \n\n      }  \n      post {  \n        always {  \n          junit 'test-reports/*.xml'  \n        }  \n      }      \n    }  \n  }  \n}   \n</code></pre>"},{"location":"Jenkins/Jenkins.md/#githubjenkins-webhook","title":"Github/Jenkins Webhook","text":""},{"location":"Jenkins/Jenkins.md/#polling-vs-webhook","title":"Polling vs Webhook","text":"<p>Polling configure une cron pour v\u00e9rifier les changements au niveau du projet Github. Aucune configuration n'est n\u00e9cessaire au niveau de Github. Webhook : Permet de d\u00e9clencher le pipeline en r\u00e9ponse \u00e0 un changement du code Github (commit etc)  </p> <p>Il est obligatoire de renseigner le script from SCM pour utiliser webhook et/ou Polling</p>"},{"location":"Jenkins/Jenkins.md/#polling-configuration","title":"Polling configuration","text":"<ol> <li>Cr\u00e9er un nouvel item pipeline </li> <li>Dans g\u00e9n\u00e9ral s\u00e9lectionner GitHub project et renseigner le lien du projet  </li> <li>Dans Build triggers s\u00e9lectionner Poll SCM </li> <li>Choisir la fr\u00e9quence (ex: * * * * ) </li> </ol>"},{"location":"Jenkins/Jenkins.md/#webhook-configuration","title":"Webhook configuration","text":"<p>1/ Configurer GitHub (Webhook) : - Allez dans votre d\u00e9p\u00f4t GitHub. - Acc\u00e9dez \u00e0 Settings &gt; Webhooks. - Cliquez sur Add webhook. - Entrez l'URL de votre Jenkins suivi de <code>/github-webhook/</code> (ex. <code>http://your-jenkins-url/github-webhook/</code>).     - Si Jenkins est local, utilisez un service comme ngrok pour exposer votre Jenkins \u00e0 Internet.  - Cochez Just the push event pour que le webhook se d\u00e9clenche sur chaque <code>push</code>. - Cliquez sur Add webhook.  </p> <p>2/ Configurer Jenkins (GitHub Plugin) :  </p> <ul> <li>Installer les plugins n\u00e9cessaires : Allez dans \"G\u00e9rer Jenkins\" &gt; \"G\u00e9rer les plugins\" et installez les plugins GitHub Plugin et GitHub Branch Source Plugin.  </li> <li>Dans votre job Jenkins, sous Source Code Management, configurez votre d\u00e9p\u00f4t GitHub (URL et authentification si n\u00e9cessaire).  </li> <li>Sous Build Triggers, activez \"GitHub hook trigger for GITScm polling\" pour que Jenkins r\u00e9agisse aux \u00e9v\u00e9nements du webhook GitHub.  </li> </ul>"},{"location":"Jenkins/Jenkins.md/#affichage-pipelines","title":"Affichage Pipelines","text":"<ol> <li>Aller dans <code>Dashboard</code> et cliquer sur <code>+ new view</code> </li> <li>Choisir <code>Build pipeline view</code> </li> <li>Dans <code>Pipeline Flow</code> choisr <code>Based on upstream/downstream relationship</code> </li> <li>S\u00e9lectionner le job initial de la pipeline dans <code>Select initial job</code> et sauvegarder   </li> </ol>"},{"location":"Jenkins/Jenkins.md/#pipeline-scriptee-vs-pipeline-declarative","title":"Pipeline script\u00e9e vs Pipeline d\u00e9clarative","text":"Pipeline script\u00e9e <pre><code>node {\n    stage (\"checkout\"){\n        git branch : \"main\" , url: \"https://github.com/ElRamo/SpringPetClinic\"  \n    }\n    stage (\"built\"){\n        withMaven(maven: \"M3\"){\n            sh \"mvn compile\"\n        }\n     }\n}\n</code></pre> Pipeline d\u00e9clarative <pre><code>pipeline{  \n\n  agent any  \n  tools {maven \"M3\"}  \n  stages{  \n\n    stage(\"checkout\"){  \n      steps{     \n        git branch: \"main\" , url: \"https://github.com/ElRamo/SpringPetClinic\"  \n      }  \n    }  \n\n    stage(\"test\"){  \n        steps{  \n          sh \"mvn test\"  \n        }     \n    }    \n  }  \n}  \n</code></pre> <p>Les deux types de pipelines, script\u00e9e et d\u00e9clarative, peuvent \u00eatre utilis\u00e9s dans un Jenkinsfile dans GitHub (voir la rubrique Github hook).  </p>"},{"location":"Jenkins/Jenkins.md/#architectures","title":"Architectures","text":"<ul> <li>Standalone (Monolithique) : Une seule instance Jenkins g\u00e8re tout, id\u00e9al pour des projets simples.  </li> <li>Distributed (Controller/Agent) : Un controller orchestre des agents pour ex\u00e9cuter les t\u00e2ches, adapt\u00e9 \u00e0 la mont\u00e9e en charge.  </li> <li>High Availability (HA) : Plusieurs controllers configur\u00e9s pour garantir une r\u00e9silience en cas de panne.  </li> <li>Containerized Jenkins : Jenkins et les builds sont isol\u00e9s dans des conteneurs pour une meilleure reproductibilit\u00e9.  </li> <li>Cloud-Native Jenkins : D\u00e9ploy\u00e9 sur le cloud avec des agents \u00e9ph\u00e9m\u00e8res pour une scalabilit\u00e9 automatique.  </li> <li>Pipeline-as-a-Service (Jenkinsfile-Driven) : Les pipelines sont d\u00e9finis dans des fichiers versionn\u00e9s, offrant flexibilit\u00e9 et contr\u00f4le.  </li> <li>Event-Driven Jenkins : Jenkins r\u00e9agit \u00e0 des \u00e9v\u00e9nements externes comme des commits ou des notifications cloud.  </li> </ul>"},{"location":"Jenkins/Jenkins.md/#types-ditems","title":"Types d'items","text":""},{"location":"Jenkins/Jenkins.md/#freestyle-projet-exemple-maven","title":"Freestyle projet  (exemple : Maven)","text":"<ol> <li>Aller dans <code>Manager Jenkins &gt; Global tool configuration &gt; Maven</code> </li> <li>Configurer l'installation Maven (nom et version)  </li> <li>Cr\u00e9er un nouvel item de type <code>freestyle project</code> </li> <li>D\u00e9finir le lien du projet github dans <code>source code management</code> </li> <li>Dans <code>Build Steps</code> choisir <code>Invoke top-level Maven Targets &gt; Maven version cr\u00e9\u00e9e plut\u00f4t</code> Goals <code>compile</code> ou <code>Test</code> </li> <li>Pour le Goal <code>Test</code> d\u00e9finir <code>Build Triggers &gt; Build after other projects are built</code> et d\u00e9finir le projet de compile  </li> </ol>"},{"location":"Jenkins/Jenkins.md/#pipeline","title":"Pipeline","text":"<p>D\u00e9finir le <code>script</code> du pipeline directement ou sp\u00e9cifier un <code>GitHub Project</code> contenant un fichier <code>Jenkinsfile</code> (voir la rubrique pipeline plus haut)</p>"},{"location":"Jenkins/Jenkins.md/#ajouter-un-nud","title":"Ajouter un n\u0153ud","text":"<p>Aller dans <code>Manage Jenkins &gt; Nodes &gt; New Node</code></p>"},{"location":"Jenkins/Jenkins.md/#a-venir","title":"A venir","text":"<ul> <li>Gestion des utilisateurs :  <ul> <li>Cr\u00e9er et g\u00e9rer des utilisateurs avec des r\u00f4les sp\u00e9cifiques.  </li> <li>Configurer des strat\u00e9gies d'autorisation (par exemple, Matrix Authorization Strategy ou Role-based Authorization Strategy).  </li> </ul> </li> <li>Permissions de base :  <ul> <li>Lire : Acc\u00e8s en lecture aux jobs.  </li> <li>Ex\u00e9cuter : Permet de lancer un job.  </li> <li>Configurer : Acc\u00e8s pour modifier un job.  </li> <li>Administrer : Acc\u00e8s complet pour g\u00e9rer Jenkins (configuration globale, gestion des utilisateurs).  </li> </ul> </li> <li>RBAC (Role-Based Access Control) :  <ul> <li>D\u00e9finir des r\u00f4les (Admin, Developer, Read-Only) pour limiter les actions des utilisateurs.  </li> <li>Restreindre l'acc\u00e8s \u00e0 certains jobs ou environnements.  </li> </ul> </li> <li>S\u00e9curisation de Jenkins :  <ul> <li>Utiliser SSL pour s\u00e9curiser les connexions.  </li> <li>Int\u00e9grer avec des outils externes (LDAP, Active Directory) pour l'authentification. </li> <li>Utiliser des plugins comme Build Authorization Plugin pour contr\u00f4ler l'acc\u00e8s aux builds.  </li> </ul> </li> <li>Gestion des permissions par job :   <ul> <li>Configurer les droits d'acc\u00e8s sp\u00e9cifiques sur chaque job (lecture, ex\u00e9cution, configuration).  </li> <li>Utiliser des plugins pour restreindre l'acc\u00e8s \u00e0 des jobs sensibles ou critiques.  </li> </ul> </li> <li>Audits et logs :  <ul> <li>Activer la journalisation des actions des utilisateurs pour un audit complet.  </li> <li>Surveiller les acc\u00e8s et l'activit\u00e9 des utilisateurs pour pr\u00e9venir les abus.   </li> </ul> </li> </ul>"},{"location":"Jenkins/Jenkins.md/#reference-cours","title":"R\u00e9f\u00e9rence cours","text":"<p>Coursera : Jenkins for Beginners Coursera : CICD Using Jenkins</p>"},{"location":"K8S/K8S.md/","title":"K8S - CKA","text":"<p>Acc\u00e9der \u00e0 la documentation K8s - CKA</p>"},{"location":"Mkdocs/Mkdocs.md/","title":"Mkdocs","text":""},{"location":"Mkdocs/Mkdocs.md/#1-installation-des-outils-necessaires","title":"1. Installation des outils n\u00e9cessaires","text":"<p>Assure-toi d'avoir Python et MkDocs install\u00e9s :</p> <pre><code># Installer MkDocs\npip install mkdocs\n\n# (Optionnel) Installer le th\u00e8me Material pour MkDocs\npip install mkdocs-material\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#2-creer-un-projet-mkdocs","title":"2. Cr\u00e9er un projet MkDocs","text":"<p>Dans le terminal, ex\u00e9cute :</p> <pre><code>mkdocs new mon-site\n</code></pre> <p>Cela cr\u00e9e la structure suivante :</p> <pre><code>mon-site/\n\u2502\u2500\u2500 mkdocs.yml       # Fichier de configuration\n\u2502\u2500\u2500 docs/            # Contient les fichiers Markdown\n    \u2514\u2500\u2500 index.md     # Page d'accueil\n\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#3-ajouter-tes-notes-obsidian","title":"3. Ajouter tes notes Obsidian","text":"<ul> <li>Copie tous tes fichiers <code>.md</code> dans le dossier <code>docs</code>.</li> <li>Structure ton contenu dans des sous-dossiers si n\u00e9cessaire.  </li> </ul> <pre><code>docs/\n\u2502\u2500\u2500 index.md\n\u2502\u2500\u2500 Docker/\n\u2502   \u2514\u2500\u2500 Docker.md\n\u2502\u2500\u2500 Jenkins/\n    \u2514\u2500\u2500 Jenkins.md\n\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#4-configurer-mkdocsyml","title":"4. Configurer <code>mkdocs.yml</code>","text":"<p>Ouvre <code>mkdocs.yml</code> et configure la navigation et le th\u00e8me :</p> <pre><code>site_name: Mes Notes\nnav:\n  - Accueil: index.md\n  - Docker: Docker/Docker.md\n  - Jenkins: Jenkins/Jenkins.md\ntheme:\n  name: material\n\u00a0 palette:\n\u00a0 \u00a0 - scheme: default\n\u00a0 \u00a0 \u00a0 primary: blue\n\u00a0 \u00a0 \u00a0 accent: blue\n\u00a0 \u00a0 \u00a0 toggle:\n\u00a0 \u00a0 \u00a0 \u00a0 icon: material/weather-sunny\n\u00a0 \u00a0 \u00a0 \u00a0 name: Basculer en mode sombre\n\u00a0 \u00a0 - scheme: slate\n\u00a0 \u00a0 \u00a0 primary: blue\n\u00a0 \u00a0 \u00a0 accent: blue\n\u00a0 \u00a0 \u00a0 toggle:\n\u00a0 \u00a0 \u00a0 \u00a0 icon: material/weather-night\n\u00a0 \u00a0 \u00a0 \u00a0 name: Basculer en mode clair\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#5-tester-localement-le-site","title":"5. Tester localement le site","text":"<p>Lance la commande suivante pour voir ton site en local :</p> <pre><code>mkdocs serve\n</code></pre> <p>Acc\u00e8de \u00e0 <code>http://127.0.0.1:8000</code> dans ton navigateur.</p>"},{"location":"Mkdocs/Mkdocs.md/#6-initialiser-le-depot-github","title":"6. Initialiser le d\u00e9p\u00f4t GitHub","text":"<p>Si ton projet n'est pas encore li\u00e9 \u00e0 un d\u00e9p\u00f4t GitHub, initialise-le :</p> <pre><code>git init\ngit add .\ngit commit -m \"Initialisation du projet MkDocs\"\ngit remote add origin https://github.com/ton-utilisateur/ton-depot.git\ngit push -u origin master\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#7publier-sur-github-pages","title":"7.Publier sur GitHub Pages","text":"<p>Utilise la commande suivante pour d\u00e9ployer ton site : <code>mkdocs gh-deploy</code> Cela :</p> <ol> <li>G\u00e9n\u00e8re le site statique.</li> <li>Publie le site sur la branche <code>gh-pages</code> de ton d\u00e9p\u00f4t GitHub.</li> </ol>"},{"location":"Mkdocs/Mkdocs.md/#8-activer-github-pages","title":"8. Activer GitHub Pages","text":"<ol> <li>Va dans ton d\u00e9p\u00f4t GitHub \u2192 Settings \u2192 Pages.</li> <li>Choisis la branche <code>gh-pages</code> comme source.</li> <li>Ton site sera accessible \u00e0 :</li> </ol> <pre><code>https://ton-utilisateur.github.io/ton-depot/\n</code></pre>"},{"location":"Mkdocs/Mkdocs.md/#9-mise-a-jour-du-site","title":"9. Mise \u00e0 jour du site","text":"<ol> <li>Modifier les fichiers  </li> <li>Reg\u00e9n\u00e9rer le site <code>mkdocs gh-deploy --force</code> </li> <li>git add+commit+push  </li> </ol>"},{"location":"Mkdocs/Mkdocs.md/#utiliser-un-bloc-deroulant","title":"Utiliser un bloc d\u00e9roulant","text":"<p>Remplacer les <code>A et B</code> par <code>&lt; et &gt;</code> </p> <p>AdetailsB AsummaryB Cliquer pour d\u00e9rouler AsummaryB trois altgr+4   MON TEXTE trois altgr+4 A/detailsB  </p>"},{"location":"Mkdocs/Mkdocs.md/#lien-hypertexte","title":"Lien hypertexte","text":"<p>Syntaxe: [lien](url) Lien interne: [lien vers header](#mon-header)  </p>"},{"location":"WSL/WSL.md/","title":"WSL","text":""},{"location":"WSL/WSL.md/#initialisation","title":"Initialisation","text":"<pre><code>wsl --install  \nwsl --set-default-version 2  \nreboot pc  \nMicrosoft store &gt; installer ubuntu  \nwsl  \nsudo apt update \n</code></pre>"},{"location":"WSL/WSL.md/#arreterlancer-session","title":"Arr\u00eater/lancer session","text":"<pre><code>wsl --terminate &lt;NomDeLaDistribution&gt;  \nwsl --list  \nwsl -d Ubuntu-22.04  \n</code></pre>"},{"location":"WSL/WSL.md/#backup-dune-session","title":"backup d'une session","text":"<p><code>wsl --export Ubuntu-22.04 mybackup.tar</code> </p>"},{"location":"WSL/WSL.md/#restaurer-la-session","title":"Restaurer la session","text":"<p><code>wsl --import &lt;DistributionNewName&gt; &lt;InstallLocation&gt; &lt;PathToBackupTar&gt;</code> </p>"},{"location":"WSL/WSL.md/#erreur-ssl","title":"Erreur SSL","text":"<ol> <li>T\u00e9l\u00e9charger le CA ROOT  </li> <li>copier le fichier ici dans <code>/usr/local/share/ca-certificates/ca.crt</code> </li> <li>Lancer la cmd : <code>sudo update-ca-certificates</code> </li> </ol>"},{"location":"WSL/WSL.md/#afficher-les-distributions-lancees","title":"Afficher les distributions lanc\u00e9es","text":"<p><code>wsl --list --running</code></p>"},{"location":"WSL/WSL.md/#creer-une-nouvelle-session","title":"Cr\u00e9er une nouvelle session","text":"<ol> <li>Cr\u00e9er une backup d'une session existante  </li> <li>Restaurer la distribution avec un nouveau nom de distribution  </li> <li>Lancer la nouvelle distribution (voir les commandes ci-dessus)   </li> </ol>"},{"location":"WSL/WSL.md/#emplacement-de-stockage-session","title":"Emplacement de stockage session","text":"<p>conna\u00eetre le dossier o\u00f9 est stock\u00e9e l'image Ubuntu-22.04  </p> <pre><code>\"Get-ChildItem \"\"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Lxss\"\" | ForEach-Object {\n    Get-ItemProperty $_.PSPath\n} | Where-Object { $_.DistributionName -eq \"\"Ubuntu-22.04\"\" } | Select-Object BasePath\"\n</code></pre>"},{"location":"WSL/WSL.md/#changer-hostname","title":"changer hostname","text":"<pre><code>vim /etc/wsl.conf\n[network]  \nhostname = MyCustomHostname\ngenerateHosts = false\n</code></pre>"},{"location":"WSL/WSL.md/#lancement-de-session-apres-demarrage-windows","title":"Lancement de session apr\u00e8s d\u00e9marrage Windows","text":"<p>Ouvrir un cmd et taper  </p> <pre><code>notepad %USERPROFILE%\\.wslconfig\n</code></pre> <p>Ajouter le param\u00e8tre ci-dessous au fichier et enregistrer</p> <pre><code>[boot]\ncommand=\"wsl -d MaSession\"\n</code></pre>"}]}